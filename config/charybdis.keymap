#include "keys_de_swiss.h"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

// / {
//     chosen { zmk,matrix_transform = &default_transform; };
// };

/ {
    /* input config for mouse move mode */

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1 5 8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <2>;

        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <12>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    /* input config for mouse scroll mode */

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <11>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // #define QUERTZ    0
    // #define NUMBERS   1
    // #define NAV-FUN   2
    // #define MAC       3
    // #define MAC-NUM   4
    // #define MAC-NAV   5
    // #define GAME      6
    // #define GAME-NUM  7
    // #define GAME-NAV  8
    // #define SCROLL    9
    // #define SNIPER   10
    // #define FN       11

    combos {
        compatible = "zmk,combos";

        rh_leftClick {
            bindings = <&mkp LCLK>;
            key-positions = <43 44>;
        };

        rh_rightClick {
            bindings = <&mkp RCLK>;
            key-positions = <44 45>;
        };

        rh_middleClick {
            bindings = <&mkp MCLK>;
            key-positions = <44 45 43>;
        };

        lh_leftClick {
            bindings = <&mkp LCLK>;
            key-positions = <40 39>;
        };

        lh_rightClick {
            bindings = <&mkp RCLK>;
            key-positions = <38 39>;
        };

        lh_middleClick {
            bindings = <&mkp MCLK>;
            key-positions = <38 39 40>;
        };

        CAPZ {
            bindings = <&kp CAPSLOCK>;
            key-positions = <24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_Main {
            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                &kp N6       &kp N7    &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB           &kp Q   &kp W   &kp E         &kp R         &kp T                 &kp Y        &kp U     &kp I      &kp O    &kp P     &kp LBKT
&kp LSHFT         &kp A   &kp S   &kp D         &kp F         &kp G                 &kp H        &kp J     &kp K      &kp L    &kp SEMI  &kp RBKT
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C         &kp V         &kp B                 &kp N        &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                                  &kp LEFT_WIN  &kp LEFT_ALT  &kp DELETE            &mkp MB1     &mkp MB2
                                                &kp SPACE     &lt 1 LEFT_COMMAND    &lt 1 ENTER
            >;
        };

        Default_Sub {
            bindings = <
&kp F1            &kp F2  &kp F3          &kp F4          &kp F5           &kp F6           &kp F7         &kp F8          &kp F9        &kp F10          &kp F11           &kp F12
&kp INT_HENKAN    &trans  &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP      &kp PAGE_UP    &kp HOME        &kp UP_ARROW  &kp END          &kp BACKSLASH     &trans
&kp LEFT_SHIFT    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &kp SINGLE_QUOTE  &trans
&kp LEFT_CONTROL  &trans  &trans          &trans          &trans           &trans           &trans         &trans          &trans        &trans           &kp EQUAL         &kp INTERNATIONAL_4
                                          &kp LEFT_WIN    &kp LEFT_ALT     &kp DELETE       &mkp MB1       &mkp MB2
                                                          &kp SPACE        &trans           &trans
            >;
        };
    };
};
